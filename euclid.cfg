#  |
#  |                                * Probe Ready Position
#  |                                  X150 Y150
#  |
#  | â€¦
#  |
#  | * Dock Re-entry staging  position
#  |   X0 Y70
#  |
#  |
#  | * Dock Exit Position
#  |   X0 Y40
#  |
#  |
#  |
#  |
#  |
#  |   X0 Y0    X30 Y0       X100 Y0
#  | * Dock   * Dock Side  * Dock Preflight
#  |_____________________________________________________________
#
# With the coupling magnets +/- 2mm of the nozzle the probe trigger height is on
# the order of 12mm, so 15mm is used as a safe height.

[gcode_macro EuclidProbe]
## how much space to put between the bed and nozzle for homing
variable_bed_clearance: 15

## where to put the probe during deployment steps
variable_position_preflight: [ 100, -4 ]
variable_position_side:      [  30, -4 ]
variable_position_dock:      [   0, -4 ]
## exit/re-entry staging
variable_position_exit:      [   0, 40 ]

gcode:
    RESPOND MSG="{ printer['gcode_macro EuclidProbe'] }"

[probe]
pin: ^PG15
x_offset: -27.942
y_offset: -16.75
; z_offset: 9.671
z_offset: 8.569
speed: 10                     ; probing speed of 5mm/second ideal is <10mm/sec
lift_speed: 10
samples: 3                   ; number of probes to perform per sample
samples_result: median      ; normalization method: see config reference
sample_retract_dist: 2.0
samples_tolerance: 0.0075
samples_tolerance_retries: 3

[homing_override]
axes: z
set_position_z: -5
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    G90

    ;; force bed to move 15mm down
    SET_KINEMATIC_POSITION Z=0
    G0 Z{ euclid_probe.bed_clearance } F500

    ;; home Y and X, Y first to avoid running into the dock
    G28 Y
    G28 X

    DEPLOY_PROBE

    ;; home Z at bed center
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F18000
    G28 Z

    RETRACT_PROBE

[gcode_macro ASSERT_PROBE_STATE]
#{# action_respond_info("{} {}".format(printer.probe, params.MUST_BE)) #}
gcode:
    G4 P0

# Macro to Deploy Bed Probe
[gcode_macro DEPLOY_PROBE]
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    RESPOND MSG="Deploying probe"

    ; check to make sure that the probe is not already attached
    ; QUERY_PROBE
    ; ASSERT_PROBE_STATE MUST_BE=docked

    G90

    ; set approach elevation to clear probe over bed on fixed gantry machine
    G0 Z{ euclid_probe.bed_clearance } F500

    ; move the carraige to safe position to start probe pickup
    G0 X{ euclid_probe.position_preflight[0] } Y{ euclid_probe.position_preflight[1] } F12000

    ;  move to the side of the dock
    G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F12000

    ; wait 1/4 second
    M400
    G4 P250

    ;  move sideways over the dock to pick up probe
    G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F1500

    ; wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    ; error_if_probe_not_deployed

    ; move out of the dock in a straight line
    G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F12000

    ; RESPOND MSG="Exiting DEPLOY_PROBE"


[gcode_macro error_if_probe_not_deployed]
gcode:
    ; error if probe not deployed
    QUERY_PROBE
    ASSERT_PROBE_STATE MUST_BE=deployed


# Macro to retract Bed Probe
[gcode_macro RETRACT_PROBE]
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    RESPOND MSG="Retracting probe"
    ; error_if_probe_not_deployed

    G90

    ; set approach elevation of Z15 for fixed gantry system to clear probe over
    ; bed
    G0 Z{ euclid_probe.bed_clearance } F3000

    ; move to the exit/re-entry staging position
    G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F12000

    ; slowly move into dock
    G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F3000

    ; wait for moves to finish, pause to force 90deg travel swipe
    M400
    G4 P250

    ; quick swipe off
    G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F12000

    ; wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    ; error_if_probe_not_deployed

    ; RESPOND MSG="Exiting RETRACT_PROBE"


# Macro to perform a bed mesh calibration by wrapping it in DEPLOY_PROBE/RETRACT_PROBE macros
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIG
gcode:
  DEPLOY_PROBE
  BED_MESH_CALIBRATE_ORIG
  RETRACT_PROBE


# Macro to perform a modified z_tilt by wrapping it in DEPLOY_PROBE/RETRACT_PROBE macros
[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_ORIG
gcode:
  DEPLOY_PROBE
  Z_TILT_ADJUST_ORIG
  RETRACT_PROBE


[gcode_macro PROBE_CALIBRATE]
rename_existing: PROBE_CALIBRATE_ORIG
gcode:
  DEPLOY_PROBE
  G90
  G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F18000
  PROBE_CALIBRATE_ORIG
  RETRACT_PROBE
